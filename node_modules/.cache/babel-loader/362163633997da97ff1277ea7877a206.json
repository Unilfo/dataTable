{"ast":null,"code":"var _jsxFileName = \"F:\\\\Application\\\\dataTable\\\\data-table\\\\src\\\\components\\\\app\\\\app.js\";\nimport React, { Component } from 'react';\nimport DataTable from 'react-data-table-component';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport ModalRowAdd from '../modal-row-add/modal-row-add';\nimport './app.css';\nlet id_count = 5;\nexport default class MyComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [{\n        id: 1,\n        title: 'Иванов Илья Сергееви',\n        year: '001'\n      }, {\n        id: 2,\n        title: 'Петров Максим Иванович',\n        year: '103'\n      }, {\n        id: 3,\n        title: 'Кузнецов Константин Васильевич',\n        year: '789'\n      }],\n      columns: [{\n        name: 'Title',\n        selector: 'title',\n        sortable: true\n      }, {\n        name: 'Year',\n        selector: 'year',\n        sortable: true,\n        right: true\n      }, {\n        name: 'buttons',\n        id: 'edit',\n        cell: ({\n          id\n        }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n          className: \"mr-2\",\n          onClick: () => this.edit(id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }\n        }, \"edit\"), /*#__PURE__*/React.createElement(Button, {\n          onClick: () => this.del(id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }\n        }, \"del\"))\n      }],\n      tern: '',\n      show: false,\n      itemModal: {}\n    };\n\n    this.openMod = () => {\n      this.setState({\n        show: true,\n        itemModal: {\n          id: '',\n          title: '',\n          year: ''\n        }\n      });\n    };\n\n    this.add = item => {\n      const idx = this.state.data.findIndex(el => el.id === item.id);\n\n      if (idx === -1 && item.title !== '' && item.year !== '') {\n        const newItem = this.createItem(item);\n        this.setState(({\n          data\n        }) => {\n          const newData = [...data, newItem];\n          return {\n            data: newData\n          };\n        });\n      } else if (idx !== -1) {\n        this.setState(({\n          data\n        }) => {\n          const findItem = this.state.data.filter(el => el.id === item.id);\n\n          if (findItem) {\n            findItem[0].title = item.title;\n            findItem[0].year = item.year;\n            const newData = [...data];\n            return {\n              data: newData\n            };\n          }\n        });\n      }\n    };\n\n    this.createItem = item => {\n      return {\n        id: id_count++,\n        title: item.title,\n        year: item.year\n      };\n    };\n\n    this.del = id => {\n      this.setState(({\n        data\n      }) => {\n        const idx = data.findIndex(el => el.id === id);\n        const newArray = [...data.slice(0, idx), ...data.slice(idx + 1)];\n        return {\n          data: newArray\n        };\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        tern: e.target.value\n      });\n    };\n\n    this.edit = id => {\n      const findItem = this.state.data.filter(item => item.id === id);\n      this.setState({\n        itemModal: findItem[0],\n        show: true\n      });\n    };\n\n    this.close = () => {\n      this.setState({\n        show: false\n      });\n    };\n  }\n\n  search(items, tern) {\n    if (tern.length === 0) {\n      return items;\n    }\n\n    const findTitle = items.filter(item => {\n      return item.title.toLowerCase().indexOf(tern.toLowerCase().trim()) > -1;\n    });\n    const findYear = items.filter(item => {\n      return item.year.toLowerCase().indexOf(tern.toLowerCase().trim()) > -1;\n    });\n    const newArrData = [...new Set([...findTitle, ...findYear])];\n    return newArrData;\n  }\n\n  render() {\n    const {\n      data,\n      columns,\n      tern,\n      show,\n      itemModal\n    } = this.state;\n    const visibalItems = this.search(data, tern);\n\n    const DataTableDB = () => {\n      return /*#__PURE__*/React.createElement(DataTable, {\n        columns: columns,\n        data: visibalItems,\n        pagination: true,\n        noHeader: true,\n        width: '100px',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex mb-3 ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"mr-auto p-2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"mr-auto p-2\",\n      onClick: this.openMod,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"p-2 form-contrl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      placeholder: \"\\u043F\\u043E\\u0438\\u0441\\u043A\",\n      value: tern,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(DataTableDB, {\n      className: \"data-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ModalRowAdd, {\n      show: show,\n      item: itemModal,\n      onClose: this.close,\n      onAdd: this.add,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n;","map":{"version":3,"sources":["F:/Application/dataTable/data-table/src/components/app/app.js"],"names":["React","Component","DataTable","Button","FormControl","ModalRowAdd","id_count","MyComponent","state","data","id","title","year","columns","name","selector","sortable","right","cell","edit","del","tern","show","itemModal","openMod","setState","add","item","idx","findIndex","el","newItem","createItem","newData","findItem","filter","newArray","slice","handleChange","e","target","value","close","search","items","length","findTitle","toLowerCase","indexOf","trim","findYear","newArrData","Set","render","visibalItems","DataTableDB"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\nimport Button from 'react-bootstrap/Button';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport ModalRowAdd from '../modal-row-add/modal-row-add';\r\nimport './app.css';\r\n\r\nlet id_count = 5;\r\n\r\nexport default class MyComponent extends Component {\r\n\r\n    state = {\r\n        data: [\r\n            { id: 1, title: 'Иванов Илья Сергееви', year: '001' },\r\n            { id: 2, title: 'Петров Максим Иванович', year: '103' },\r\n            { id: 3, title: 'Кузнецов Константин Васильевич', year: '789' },\r\n        ],\r\n        columns: [\r\n            {\r\n                name: 'Title',\r\n                selector: 'title',\r\n                sortable: true,\r\n            },\r\n            {\r\n                name: 'Year',\r\n                selector: 'year',\r\n                sortable: true,\r\n                right: true,\r\n            },\r\n            {\r\n                name: 'buttons',\r\n                id: 'edit',\r\n                cell: ({ id }) =>\r\n                    <>\r\n                        <Button className='mr-2' onClick={() => this.edit(id)}>edit</Button>\r\n                        <Button onClick={() => this.del(id)}>del</Button>\r\n                    </>\r\n            },\r\n        ],\r\n        tern: '',\r\n        show: false,\r\n        itemModal: {}\r\n    };\r\n\r\n    openMod = () => {\r\n        this.setState({\r\n            show: true,\r\n            itemModal: { id: '', title: '', year: '' }\r\n        });\r\n    };\r\n\r\n    add = (item) => {\r\n        const idx = this.state.data.findIndex((el) => el.id === item.id);\r\n\r\n        if (idx === -1 && item.title !== '' && item.year !== '') {\r\n            const newItem = this.createItem(item);\r\n            this.setState(({ data }) => {\r\n                const newData = [\r\n                    ...data,\r\n                    newItem\r\n                ];\r\n                return {\r\n                    data: newData\r\n                }\r\n            });\r\n        }\r\n        else if (idx !== -1) {\r\n            this.setState(({ data }) => {\r\n                const findItem = this.state.data.filter((el) => el.id === item.id);\r\n                if (findItem) {\r\n                    findItem[0].title = item.title;\r\n                    findItem[0].year = item.year;\r\n                    const newData = [\r\n                        ...data\r\n                    ];\r\n                    return {\r\n                        data: newData\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    createItem = (item) => {\r\n        return {\r\n            id: id_count++,\r\n            title: item.title,\r\n            year: item.year\r\n        }\r\n    };\r\n\r\n    del = (id) => {\r\n        this.setState(({ data }) => {\r\n            const idx = data.findIndex((el) => el.id === id);\r\n\r\n            const newArray = [\r\n                ...data.slice(0, idx),\r\n                ...data.slice(idx + 1)\r\n            ];\r\n\r\n            return {\r\n                data: newArray\r\n            };\r\n        });\r\n    };\r\n\r\n    search(items, tern) {\r\n\r\n        if (tern.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        const findTitle = items.filter((item) => {\r\n            return item.title\r\n                .toLowerCase()\r\n                .indexOf(tern.toLowerCase().trim()) > -1;\r\n        });\r\n\r\n        const findYear = items.filter((item) => {\r\n            return item.year\r\n                .toLowerCase()\r\n                .indexOf(tern.toLowerCase().trim()) > -1;\r\n        });\r\n\r\n        const newArrData = [...new Set([...findTitle, ...findYear])];\r\n\r\n        return newArrData;\r\n    };\r\n\r\n    handleChange = (e) => {\r\n\r\n        this.setState({\r\n            tern: e.target.value\r\n        });\r\n    };\r\n\r\n    edit = (id) => {\r\n        const findItem = this.state.data.filter((item) => item.id === id);\r\n\r\n        this.setState({\r\n            itemModal: findItem[0],\r\n            show: true\r\n        });\r\n    };\r\n\r\n    close = () => {\r\n        this.setState({\r\n            show: false\r\n        });\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { data, columns, tern, show, itemModal } = this.state;\r\n        const visibalItems = this.search(data, tern);\r\n\r\n        const DataTableDB = () => {\r\n            return (\r\n                <DataTable\r\n                    columns={columns}\r\n                    data={visibalItems}\r\n                    pagination\r\n                    noHeader\r\n                    width={'100px'}\r\n                />);\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"d-flex mb-3 ml-2\">\r\n                    <div class=\"mr-auto p-2 \">\r\n                        <Button className='mr-auto p-2' onClick={this.openMod}>Создать</Button>\r\n                    </div>\r\n                    <div class=\"p-2 form-contrl\">\r\n                        <FormControl\r\n                            placeholder='поиск'\r\n                            value={tern}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <DataTableDB className='data-table' />\r\n                <ModalRowAdd show={show} item={itemModal} onClose={this.close} onAdd={this.add} />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}