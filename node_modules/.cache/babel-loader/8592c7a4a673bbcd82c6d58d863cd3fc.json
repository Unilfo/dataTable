{"ast":null,"code":"var _jsxFileName = \"F:\\\\Application\\\\dataTable\\\\data-table\\\\src\\\\components\\\\app.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { storiesOf } from '@storybook/react';\nimport faker from 'faker';\nimport Button from '../shared/Button';\nimport DataTable from '../../../src/index';\n\nconst createUser = () => ({\n  id: faker.random.uuid(),\n  name: faker.name.findName(),\n  email: faker.internet.email(),\n  address: faker.address.streetAddress(),\n  bio: faker.lorem.sentence(),\n  image: faker.image.avatar()\n});\n\nconst createUsers = (numUsers = 5) => new Array(numUsers).fill(undefined).map(createUser);\n\nconst fakeUsers = createUsers(2000);\nconst TextField = styled.input`\n  height: 32px;\n  width: 200px;\n  border-radius: 3px;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border: 1px solid #e5e5e5;\n  padding: 0 32px 0 16px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\nconst ClearButton = styled(Button)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  height: 34px;\n  width: 32px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst FilterComponent = ({\n  filterText,\n  onFilter,\n  onClear\n}) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextField, {\n  id: \"search\",\n  type: \"text\",\n  placeholder: \"Filter By Name\",\n  value: filterText,\n  onChange: onFilter,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(ClearButton, {\n  type: \"button\",\n  onClick: onClear,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }\n}, \"X\"));\n\nconst columns = [{\n  name: 'Name',\n  selector: 'name',\n  sortable: true\n}, {\n  name: 'Email',\n  selector: 'email',\n  sortable: true\n}, {\n  name: 'Address',\n  selector: 'address',\n  sortable: true\n}];\n\nconst BasicTable = () => {\n  const [filterText, setFilterText] = React.useState('');\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\n  const filteredItems = fakeUsers.filter(item => item.name && item.name.toLowerCase().includes(filterText.toLowerCase()));\n  const subHeaderComponentMemo = React.useMemo(() => {\n    const handleClear = () => {\n      if (filterText) {\n        setResetPaginationToggle(!resetPaginationToggle);\n        setFilterText('');\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(FilterComponent, {\n      onFilter: e => setFilterText(e.target.value),\n      onClear: handleClear,\n      filterText: filterText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 16\n      }\n    });\n  }, [filterText, resetPaginationToggle]);\n  return /*#__PURE__*/React.createElement(DataTable, {\n    title: \"Contact List\",\n    columns: columns,\n    data: filteredItems,\n    pagination: true,\n    paginationResetDefaultPage: resetPaginationToggle // optionally, a hook to reset pagination to page 1\n    ,\n    subHeader: true,\n    subHeaderComponent: subHeaderComponentMemo,\n    selectableRows: true,\n    persistTableHead: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  });\n};\n\nstoriesOf('Filtering', module).add('Example 1', () => /*#__PURE__*/React.createElement(BasicTable, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 29\n  }\n}));","map":{"version":3,"sources":["F:/Application/dataTable/data-table/src/components/app.js"],"names":["React","styled","storiesOf","faker","Button","DataTable","createUser","id","random","uuid","name","findName","email","internet","address","streetAddress","bio","lorem","sentence","image","avatar","createUsers","numUsers","Array","fill","undefined","map","fakeUsers","TextField","input","ClearButton","FilterComponent","filterText","onFilter","onClear","columns","selector","sortable","BasicTable","setFilterText","useState","resetPaginationToggle","setResetPaginationToggle","filteredItems","filter","item","toLowerCase","includes","subHeaderComponentMemo","useMemo","handleClear","e","target","value","module","add"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAEA,MAAMC,UAAU,GAAG,OAAO;AACtBC,EAAAA,EAAE,EAAEJ,KAAK,CAACK,MAAN,CAAaC,IAAb,EADkB;AAEtBC,EAAAA,IAAI,EAAEP,KAAK,CAACO,IAAN,CAAWC,QAAX,EAFgB;AAGtBC,EAAAA,KAAK,EAAET,KAAK,CAACU,QAAN,CAAeD,KAAf,EAHe;AAItBE,EAAAA,OAAO,EAAEX,KAAK,CAACW,OAAN,CAAcC,aAAd,EAJa;AAKtBC,EAAAA,GAAG,EAAEb,KAAK,CAACc,KAAN,CAAYC,QAAZ,EALiB;AAMtBC,EAAAA,KAAK,EAAEhB,KAAK,CAACgB,KAAN,CAAYC,MAAZ;AANe,CAAP,CAAnB;;AASA,MAAMC,WAAW,GAAG,CAACC,QAAQ,GAAG,CAAZ,KAChB,IAAIC,KAAJ,CAAUD,QAAV,EAAoBE,IAApB,CAAyBC,SAAzB,EAAoCC,GAApC,CAAwCpB,UAAxC,CADJ;;AAGA,MAAMqB,SAAS,GAAGN,WAAW,CAAC,IAAD,CAA7B;AAEA,MAAMO,SAAS,GAAG3B,MAAM,CAAC4B,KAAM;;;;;;;;;;;;;;CAA/B;AAgBA,MAAMC,WAAW,GAAG7B,MAAM,CAACG,MAAD,CAAS;;;;;;;;;;;CAAnC;;AAcA,MAAM2B,eAAe,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,QAAd;AAAwBC,EAAAA;AAAxB,CAAD,kBACpB,uDACI,oBAAC,SAAD;AAAW,EAAA,EAAE,EAAC,QAAd;AAAuB,EAAA,IAAI,EAAC,MAA5B;AAAmC,EAAA,WAAW,EAAC,gBAA/C;AAAgE,EAAA,KAAK,EAAEF,UAAvE;AAAmF,EAAA,QAAQ,EAAEC,QAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,eAEI,oBAAC,WAAD;AAAa,EAAA,IAAI,EAAC,QAAlB;AAA2B,EAAA,OAAO,EAAEC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ,CADJ;;AAOA,MAAMC,OAAO,GAAG,CACZ;AACIzB,EAAAA,IAAI,EAAE,MADV;AAEI0B,EAAAA,QAAQ,EAAE,MAFd;AAGIC,EAAAA,QAAQ,EAAE;AAHd,CADY,EAMZ;AACI3B,EAAAA,IAAI,EAAE,OADV;AAEI0B,EAAAA,QAAQ,EAAE,OAFd;AAGIC,EAAAA,QAAQ,EAAE;AAHd,CANY,EAWZ;AACI3B,EAAAA,IAAI,EAAE,SADV;AAEI0B,EAAAA,QAAQ,EAAE,SAFd;AAGIC,EAAAA,QAAQ,EAAE;AAHd,CAXY,CAAhB;;AAkBA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAM,CAACN,UAAD,EAAaO,aAAb,IAA8BvC,KAAK,CAACwC,QAAN,CAAe,EAAf,CAApC;AACA,QAAM,CAACC,qBAAD,EAAwBC,wBAAxB,IAAoD1C,KAAK,CAACwC,QAAN,CAAe,KAAf,CAA1D;AACA,QAAMG,aAAa,GAAGhB,SAAS,CAACiB,MAAV,CAAiBC,IAAI,IAAIA,IAAI,CAACnC,IAAL,IAAamC,IAAI,CAACnC,IAAL,CAAUoC,WAAV,GAAwBC,QAAxB,CAAiCf,UAAU,CAACc,WAAX,EAAjC,CAAtC,CAAtB;AAEA,QAAME,sBAAsB,GAAGhD,KAAK,CAACiD,OAAN,CAAc,MAAM;AAC/C,UAAMC,WAAW,GAAG,MAAM;AACtB,UAAIlB,UAAJ,EAAgB;AACZU,QAAAA,wBAAwB,CAAC,CAACD,qBAAF,CAAxB;AACAF,QAAAA,aAAa,CAAC,EAAD,CAAb;AACH;AACJ,KALD;;AAOA,wBAAO,oBAAC,eAAD;AAAiB,MAAA,QAAQ,EAAEY,CAAC,IAAIZ,aAAa,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAA7C;AAA+D,MAAA,OAAO,EAAEH,WAAxE;AAAqF,MAAA,UAAU,EAAElB,UAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAT8B,EAS5B,CAACA,UAAD,EAAaS,qBAAb,CAT4B,CAA/B;AAWA,sBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,cADV;AAEI,IAAA,OAAO,EAAEN,OAFb;AAGI,IAAA,IAAI,EAAEQ,aAHV;AAII,IAAA,UAAU,MAJd;AAKI,IAAA,0BAA0B,EAAEF,qBALhC,CAKuD;AALvD;AAMI,IAAA,SAAS,MANb;AAOI,IAAA,kBAAkB,EAAEO,sBAPxB;AAQI,IAAA,cAAc,MARlB;AASI,IAAA,gBAAgB,MATpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAaH,CA7BD;;AA+BA9C,SAAS,CAAC,WAAD,EAAcoD,MAAd,CAAT,CACKC,GADL,CACS,WADT,EACsB,mBAAM,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAD5B","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { storiesOf } from '@storybook/react';\r\nimport faker from 'faker';\r\nimport Button from '../shared/Button';\r\nimport DataTable from '../../../src/index';\r\n\r\nconst createUser = () => ({\r\n    id: faker.random.uuid(),\r\n    name: faker.name.findName(),\r\n    email: faker.internet.email(),\r\n    address: faker.address.streetAddress(),\r\n    bio: faker.lorem.sentence(),\r\n    image: faker.image.avatar(),\r\n});\r\n\r\nconst createUsers = (numUsers = 5) =>\r\n    new Array(numUsers).fill(undefined).map(createUser);\r\n\r\nconst fakeUsers = createUsers(2000);\r\n\r\nconst TextField = styled.input`\r\n  height: 32px;\r\n  width: 200px;\r\n  border-radius: 3px;\r\n  border-top-left-radius: 5px;\r\n  border-bottom-left-radius: 5px;\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  border: 1px solid #e5e5e5;\r\n  padding: 0 32px 0 16px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ClearButton = styled(Button)`\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n  border-top-right-radius: 5px;\r\n  border-bottom-right-radius: 5px;\r\n  height: 34px;\r\n  width: 32px;\r\n  text-align: center;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\n\r\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\r\n    <>\r\n        <TextField id=\"search\" type=\"text\" placeholder=\"Filter By Name\" value={filterText} onChange={onFilter} />\r\n        <ClearButton type=\"button\" onClick={onClear}>X</ClearButton>\r\n    </>\r\n);\r\n\r\nconst columns = [\r\n    {\r\n        name: 'Name',\r\n        selector: 'name',\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'Email',\r\n        selector: 'email',\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'Address',\r\n        selector: 'address',\r\n        sortable: true,\r\n    },\r\n];\r\n\r\nconst BasicTable = () => {\r\n    const [filterText, setFilterText] = React.useState('');\r\n    const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\r\n    const filteredItems = fakeUsers.filter(item => item.name && item.name.toLowerCase().includes(filterText.toLowerCase()));\r\n\r\n    const subHeaderComponentMemo = React.useMemo(() => {\r\n        const handleClear = () => {\r\n            if (filterText) {\r\n                setResetPaginationToggle(!resetPaginationToggle);\r\n                setFilterText('');\r\n            }\r\n        };\r\n\r\n        return <FilterComponent onFilter={e => setFilterText(e.target.value)} onClear={handleClear} filterText={filterText} />;\r\n    }, [filterText, resetPaginationToggle]);\r\n\r\n    return (\r\n        <DataTable\r\n            title=\"Contact List\"\r\n            columns={columns}\r\n            data={filteredItems}\r\n            pagination\r\n            paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n            subHeader\r\n            subHeaderComponent={subHeaderComponentMemo}\r\n            selectableRows\r\n            persistTableHead\r\n        />\r\n    );\r\n};\r\n\r\nstoriesOf('Filtering', module)\r\n    .add('Example 1', () => <BasicTable />);\r\n"]},"metadata":{},"sourceType":"module"}